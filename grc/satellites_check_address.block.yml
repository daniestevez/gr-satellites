# auto-generated by grc.converter

id: satellites_check_address
label: Check AX.25 address
category: '[Satellites]/AX.25'

parameters:
-   id: address
    label: Address
    dtype: string
-   id: direction
    label: Direction
    dtype: string
    options: ['"from"', '"to"']
    option_labels: [From, To]
-   id: digicallsign
    label: Digicallsign
    dtype: string
    default: ''

inputs:
-   domain: message
    id: in

outputs:
-   domain: message
    id: ok
    optional: true
-   domain: message
    id: fail
    optional: true

templates:
    imports: import satellites
    make: satellites.check_address(${address}, ${direction}, ${digicallsign})

documentation: |-
    Enter either an address (choose "from" for source or "to" for destination callsign) or a digipeater callsign or both.
    The logical connective between 'address' and 'digipeater callsign' is an inclusive disjunction (OR).
    If at least one callsign of both matches, the frame is passed to output port "ok".
    The address callsign may have a SSID, the digipeater callsign must not have a SSID.
    
    Example and results:
    Address: PCSAT-1 (from)
    Digicallsign: W3ADO

    Every frame with PCSAT-1 as source callsign will be forwarded to output port "ok".
    Every frame with "via" W3ADO (SSID is arbitrary) and hbit set (usually marked with an asterisk (*) to show that it was digipeated) will be forwarded to output port "ok".
    Everything else will be forwarded to output port "fail".
    
file_format: 1
