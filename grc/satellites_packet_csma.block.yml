id: satellites_packet_csma
label: Packet CSMA
category: '[Satellites]/Medium Access'

templates:
  imports: import satellites
  make: satellites.packet_csma(${type.size}*${vlen}, ${back_to_back_priority}, ${len_tag_key})

parameters:
- id: type
  label: Item Type
  dtype: enum
  options: [complex, float, int, short, byte]
  option_attributes:
    size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int,
           gr.sizeof_short, gr.sizeof_char]
  hide: part
- id: len_tag_key
  label: Length Tag Key
  dtype: string
  default: '"packet_len"'
- id: back_to_back_priority
  label: Back-to-back Priority
  dtype: enum
  default: 'False'
  options: ['True', 'False']
  option_labels: ['Yes', 'No']
- id: vlen
  label: Vector Length
  dtype: int
  default: '1'
  hide: ${ 'part' if vlen == 1 else 'none' }

inputs:
- domain: stream
  dtype: ${type}
  vlen: ${vlen}
- label: carrier_sense
  domain: message

outputs:
- domain: stream
  dtype: ${type}
  vlen: ${vlen}

asserts:
- ${ vlen > 0 }

documentation: |-
    This block implements a CSMA system for a stream of packets delimited by
    packet_len tags. The block expects to receive messages from a carrier sense
    detector that indicate the current carrier sense state every time that the
    state changes. These messages should be a pair containing a bool in the cdr.

    Whenever a new packet arrives to this block, the current status of the
    carrier sense is checked, and the packet is only propagated to the output if
    the carrier sense is false. Otherwise the packet is retained until carrier
    sense becomes false.

    As an exception to this rule, if Back-to-back Priority is set to true and
    a packet arrives back-to-back (meaning that it begins in the same work()
    call as the end of the previous packet), then the packet is propagated to
    the output immediately regardless of the current state of the carrier
    sense. This is mainly intended as a workaround for systems in which the
    carrier sense might detect the packets transmitted by this system due to TX
    to RX leakage.

    Input:
        A stream of items delimited by packet length tags
    Output:
        A stream of the same items, possibly retained for some time due to carrier sense

    Parameters:
        Type: Type of the stream items
        Length Tag Key: Packet length key of the tagged stream
        Back-to-back Priority: Transmit back-to-back packets ignoring the carrier sense
        Vector Length: Vector length of the stream items

file_format: 1
